# praetinee/envoccdiseases/EnvOccDiseases-main/forms/lead_occupational.py
import streamlit as st
import datetime
import pandas as pd

def render():
    """
    Renders the improved Lead Occupational Investigation Form.
    This version uses tabs for better organization and a cleaner UI.
    """

    st.header("‡πÅ‡∏ö‡∏ö‡∏™‡∏≠‡∏ö‡∏™‡∏ß‡∏ô‡πÇ‡∏£‡∏Ñ‡∏à‡∏≤‡∏Å‡∏ï‡∏∞‡∏Å‡∏±‡πà‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏Ç‡∏≠‡∏á‡∏ï‡∏∞‡∏Å‡∏±‡πà‡∏ß")
    st.caption("‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏á‡∏≤‡∏ô‡∏≠‡∏≤‡∏ä‡∏µ‡∏ß‡πÄ‡∏ß‡∏ä‡∏Å‡∏£‡∏£‡∏° (‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡πÅ‡∏ô‡∏ö‡∏ó‡∏µ‡πà 1 ‡∏´‡∏ô‡πâ‡∏≤ 30-33)")

    # --- Data Collection Dictionary ---
    # Using a dictionary to store form data makes it easy to manage and pass around.
    form_data = {}

    # --- Tabbed Interface ---
    # Using tabs to break down the long form into logical sections.
    # This makes the form feel less overwhelming and easier to navigate.
    tab1, tab2, tab3, tab4, tab5 = st.tabs([
        "üßë ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ", 
        "‚ù§Ô∏è ‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡πÅ‡∏•‡∏∞‡∏û‡∏§‡∏ï‡∏¥‡∏Å‡∏£‡∏£‡∏°", 
        "üõ†Ô∏è ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô", 
        "üî¨ ‡∏õ‡∏±‡∏à‡∏à‡∏±‡∏¢‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡πÅ‡∏•‡∏∞‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô", 
        "ü©∫ ‡∏≠‡∏≤‡∏Å‡∏≤‡∏£"
    ])

    # --- Tab 1: General Information ---
    with tab1:
        with st.container(border=True):
            st.subheader("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏™‡∏≠‡∏ö‡∏™‡∏ß‡∏ô")
            col1, col2 = st.columns(2)
            form_data['‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏≠‡∏ö‡∏™‡∏ß‡∏ô'] = col1.date_input("‡∏ß‡∏±‡∏ô/‡πÄ‡∏î‡∏∑‡∏≠‡∏ô/‡∏õ‡∏µ ‡∏ó‡∏µ‡πà‡∏™‡∏≠‡∏ö‡∏™‡∏ß‡∏ô:", datetime.date.today())
            form_data['‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏ñ‡∏≤‡∏ô‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏Å‡∏≤‡∏£'] = col2.text_input("‡∏ä‡∏∑‡πà‡∏≠‡πÇ‡∏£‡∏á‡∏á‡∏≤‡∏ô/‡∏™‡∏ñ‡∏≤‡∏ô‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏Å‡∏≤‡∏£:")
            form_data['‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏¥‡∏à‡∏Å‡∏≤‡∏£'] = st.text_input("‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏™‡∏ñ‡∏≤‡∏ô‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏≤‡∏£:")

        with st.container(border=True):
            st.subheader("‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 1: ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•")
            form_data['‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•'] = st.text_input("1.1 ‡∏ä‡∏∑‡πà‡∏≠ - ‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•:")
            form_data['‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô'] = st.text_area("1.2 ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô:", placeholder="‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà, ‡∏´‡∏°‡∏π‡πà, ‡∏ï‡∏≥‡∏ö‡∏•, ‡∏≠‡∏≥‡πÄ‡∏†‡∏≠, ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î")

            st.write("1.3 ‡∏≠‡∏≤‡∏®‡∏±‡∏¢‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏≤‡πÅ‡∏•‡πâ‡∏ß:")
            col1, col2 = st.columns(2)
            res_years = col1.number_input("‡∏õ‡∏µ", min_value=0, step=1, key="res_years")
            res_months = col2.number_input("‡πÄ‡∏î‡∏∑‡∏≠‡∏ô", min_value=0, max_value=11, step=1, key="res_months")
            form_data['‡∏≠‡∏≤‡∏®‡∏±‡∏¢‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏≤‡πÅ‡∏•‡πâ‡∏ß'] = f"{res_years} ‡∏õ‡∏µ {res_months} ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô"

            col1, col2 = st.columns(2)
            form_data['‡∏≠‡∏≤‡∏¢‡∏∏'] = col1.number_input("1.4 ‡∏≠‡∏≤‡∏¢‡∏∏ (‡∏õ‡∏µ):", min_value=0, step=1)
            form_data['‡πÄ‡∏û‡∏®'] = col2.radio("1.5 ‡πÄ‡∏û‡∏®:", ["‡∏ä‡∏≤‡∏¢", "‡∏´‡∏ç‡∏¥‡∏á"], horizontal=True)

            col1, col2 = st.columns(2)
            marital_status_option = col1.selectbox("1.6 ‡∏™‡∏ñ‡∏≤‡∏ô‡∏†‡∏≤‡∏û‡∏™‡∏°‡∏£‡∏™:",
                         ["‡πÇ‡∏™‡∏î", "‡∏Ñ‡∏π‡πà", "‡∏´‡∏¢‡πà‡∏≤‡∏£‡πâ‡∏≤‡∏á/‡πÅ‡∏¢‡∏Å‡∏Å‡∏±‡∏ô‡∏≠‡∏¢‡∏π‡πà/‡∏´‡∏°‡πâ‡∏≤‡∏¢", "‡∏≠‡∏∑‡πà‡∏ô‡πÜ"])
            if marital_status_option == "‡∏≠‡∏∑‡πà‡∏ô‡πÜ":
                marital_status_other = col1.text_input("‡∏≠‡∏∑‡πà‡∏ô‡πÜ (‡πÇ‡∏õ‡∏£‡∏î‡∏£‡∏∞‡∏ö‡∏∏):", key="marital_other", label_visibility="collapsed")
                form_data['‡∏™‡∏ñ‡∏≤‡∏ô‡∏†‡∏≤‡∏û‡∏™‡∏°‡∏£‡∏™'] = marital_status_other
            else:
                form_data['‡∏™‡∏ñ‡∏≤‡∏ô‡∏†‡∏≤‡∏û‡∏™‡∏°‡∏£‡∏™'] = marital_status_option

            form_data['‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î'] = col2.selectbox("1.7 ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î:",
                         ["‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏®‡∏∂‡∏Å‡∏©‡∏≤", "‡∏õ‡∏£‡∏∞‡∏ñ‡∏°‡∏®‡∏∂‡∏Å‡∏©‡∏≤", "‡∏°‡∏±‡∏ò‡∏¢‡∏°‡∏®‡∏∂‡∏Å‡∏©‡∏≤/‡∏õ‡∏ß‡∏ä.",
                          "‡∏≠‡∏ô‡∏∏‡∏õ‡∏£‡∏¥‡∏ç‡∏ç‡∏≤/‡∏õ‡∏ß‡∏™.", "‡∏õ‡∏£‡∏¥‡∏ç‡∏ç‡∏≤‡∏ï‡∏£‡∏µ", "‡∏™‡∏π‡∏á‡∏Å‡∏ß‡πà‡∏≤‡∏õ‡∏£‡∏¥‡∏ç‡∏ç‡∏≤‡∏ï‡∏£‡∏µ"])

            st.write("1.8 ‡∏à‡πç‡∏≤‡∏ô‡∏ß‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏ô‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß:")
            col1, col2 = st.columns(2)
            fam_total = col1.number_input("‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (‡∏Ñ‡∏ô)", min_value=0, step=1)
            fam_children = col2.number_input("‡πÄ‡∏î‡πá‡∏Å‡∏≠‡∏≤‡∏¢‡∏∏ < 7 ‡∏õ‡∏µ (‡∏Ñ‡∏ô)", min_value=0, step=1)
            form_data['‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏ô‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß'] = f"‡∏£‡∏ß‡∏°: {fam_total} ‡∏Ñ‡∏ô, ‡πÄ‡∏î‡πá‡∏Å < 7 ‡∏õ‡∏µ: {fam_children} ‡∏Ñ‡∏ô"

    # --- Tab 2: Health and Behavior ---
    with tab2:
        with st.container(border=True):
            st.subheader("‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 2: ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏ß‡∏∞‡πÅ‡∏•‡∏∞‡∏û‡∏§‡∏ï‡∏¥‡∏Å‡∏£‡∏£‡∏°‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û")
            smoking_hist = st.radio("2.1 ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏π‡∏ö‡∏ö‡∏∏‡∏´‡∏£‡∏µ‡πà:", ["‡πÑ‡∏°‡πà‡∏™‡∏π‡∏ö", "‡πÄ‡∏Ñ‡∏¢‡∏™‡∏π‡∏ö‡πÅ‡∏ï‡πà‡πÄ‡∏•‡∏¥‡∏Å‡πÅ‡∏•‡πâ‡∏ß", "‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏¢‡∏±‡∏á‡∏™‡∏π‡∏ö"])
            if smoking_hist == "‡πÄ‡∏Ñ‡∏¢‡∏™‡∏π‡∏ö‡πÅ‡∏ï‡πà‡πÄ‡∏•‡∏¥‡∏Å‡πÅ‡∏•‡πâ‡∏ß":
                quit_years = st.number_input("‡πÄ‡∏•‡∏¥‡∏Å‡∏°‡∏≤‡πÅ‡∏•‡πâ‡∏ß (‡∏õ‡∏µ)", min_value=0, step=1, key="smoke_quit")
                form_data['‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏π‡∏ö‡∏ö‡∏∏‡∏´‡∏£‡∏µ‡πà'] = f"‡πÄ‡∏Ñ‡∏¢‡∏™‡∏π‡∏ö‡πÅ‡∏ï‡πà‡πÄ‡∏•‡∏¥‡∏Å‡πÅ‡∏•‡πâ‡∏ß ({quit_years} ‡∏õ‡∏µ)"
            elif smoking_hist == "‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏¢‡∏±‡∏á‡∏™‡∏π‡∏ö":
                current_amount = st.number_input("‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏¢‡∏±‡∏á‡∏™‡∏π‡∏ö (‡∏°‡∏ß‡∏ô/‡∏ß‡∏±‡∏ô)", min_value=0, step=1, key="smoke_current")
                form_data['‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏π‡∏ö‡∏ö‡∏∏‡∏´‡∏£‡∏µ‡πà'] = f"‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏¢‡∏±‡∏á‡∏™‡∏π‡∏ö ({current_amount} ‡∏°‡∏ß‡∏ô/‡∏ß‡∏±‡∏ô)"
            else:
                form_data['‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏π‡∏ö‡∏ö‡∏∏‡∏´‡∏£‡∏µ‡πà'] = smoking_hist

            smoking_place_opt = st.selectbox("2.2 ‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏´‡∏£‡∏∑‡∏≠‡∏ö‡∏£‡∏¥‡πÄ‡∏ß‡∏ì‡∏ó‡∏µ‡πà‡∏ó‡πà‡∏≤‡∏ô‡∏™‡∏π‡∏ö‡∏ö‡∏∏‡∏´‡∏£‡∏µ‡πà:",
                       ["‡πÑ‡∏°‡πà‡∏™‡∏π‡∏ö", "‡∏ö‡∏£‡∏¥‡πÄ‡∏ß‡∏ì‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô/‡∏™‡∏π‡∏ö‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Ç‡∏ì‡∏∞‡∏ó‡∏≥‡∏á‡∏≤‡∏ô", "‡∏ö‡∏£‡∏¥‡πÄ‡∏ß‡∏ì‡∏ó‡∏µ‡πà‡∏à‡∏±‡∏î‡πÑ‡∏ß‡πâ",
                        "‡∏ö‡∏£‡∏¥‡πÄ‡∏ß‡∏ì‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏ó‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£/‡πÇ‡∏£‡∏á‡∏≠‡∏≤‡∏´‡∏≤‡∏£", "‡∏≠‡∏∑‡πà‡∏ô‡πÜ"])
            if smoking_place_opt == "‡∏≠‡∏∑‡πà‡∏ô‡πÜ":
                smoking_place_other = st.text_input("‡∏≠‡∏∑‡πà‡∏ô‡πÜ (‡πÇ‡∏õ‡∏£‡∏î‡∏£‡∏∞‡∏ö‡∏∏):", key="smoke_place_other", label_visibility="collapsed")
                form_data['‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏π‡∏ö‡∏ö‡∏∏‡∏´‡∏£‡∏µ‡πà'] = smoking_place_other
            else:
                form_data['‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏π‡∏ö‡∏ö‡∏∏‡∏´‡∏£‡∏µ‡πà'] = smoking_place_opt

            eating_place_opt = st.selectbox("2.3 ‡∏ó‡πà‡∏≤‡∏ô‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏ó‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÉ‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡πç‡∏≤‡∏á‡∏≤‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà:",
                 ["‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏ó‡∏≤‡∏ô", "‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏ó‡∏≤‡∏ô‡πÉ‡∏ô‡∏ö‡∏£‡∏¥‡πÄ‡∏ß‡∏ì‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏á‡∏≤‡∏ô", "‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏ó‡∏≤‡∏ô‡πÉ‡∏ô‡πÇ‡∏£‡∏á‡∏≠‡∏≤‡∏´‡∏≤‡∏£", "‡∏≠‡∏∑‡πà‡∏ô‡πÜ"])
            if eating_place_opt == "‡∏≠‡∏∑‡πà‡∏ô‡πÜ":
                eating_place_other = st.text_input("‡∏≠‡∏∑‡πà‡∏ô‡πÜ (‡πÇ‡∏õ‡∏£‡∏î‡∏£‡∏∞‡∏ö‡∏∏):", key="eat_place_other", label_visibility="collapsed")
                form_data['‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏ó‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÉ‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô'] = eating_place_other
            else:
                form_data['‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏ó‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÉ‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô'] = eating_place_opt

            food_source_opts = st.multiselect("2.4 ‡πÅ‡∏´‡∏•‡πà‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏≤‡∏Ç‡∏≠‡∏á‡∏≠‡∏≤‡∏´‡∏≤‡∏£ (‡∏ï‡∏≠‡∏ö‡πÑ‡∏î‡πâ‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 1 ‡∏Ç‡πâ‡∏≠):",
                       ["‡∏õ‡∏£‡∏∏‡∏á/‡∏ó‡∏≥‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÄ‡∏≠‡∏á", "‡∏ã‡∏∑‡πâ‡∏≠‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡πá‡∏ô‡∏´‡∏•‡∏±‡∏Å", "‡∏≠‡∏∑‡πà‡∏ô‡πÜ"])
            if "‡∏≠‡∏∑‡πà‡∏ô‡πÜ" in food_source_opts:
                food_source_other = st.text_input("‡∏≠‡∏∑‡πà‡∏ô‡πÜ (‡πÇ‡∏õ‡∏£‡∏î‡∏£‡∏∞‡∏ö‡∏∏):", key="food_src_other", label_visibility="collapsed")
                form_data['‡πÅ‡∏´‡∏•‡πà‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏≤‡∏Ç‡∏≠‡∏á‡∏≠‡∏≤‡∏´‡∏≤‡∏£'] = ", ".join(food_source_opts) + f", ‡∏≠‡∏∑‡πà‡∏ô‡πÜ: {food_source_other}"
            else:
                form_data['‡πÅ‡∏´‡∏•‡πà‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏≤‡∏Ç‡∏≠‡∏á‡∏≠‡∏≤‡∏´‡∏≤‡∏£'] = ", ".join(food_source_opts)

            water_source_opt = st.selectbox("2.5 ‡πÅ‡∏´‡∏•‡πà‡∏á‡∏ô‡πâ‡∏≥‡∏î‡∏∑‡πà‡∏°:", ["‡∏ô‡πâ‡∏≥‡∏õ‡∏£‡∏∞‡∏õ‡∏≤", "‡∏ô‡πâ‡∏≥‡∏ã‡∏∑‡πâ‡∏≠", "‡∏ô‡∏≤‡∏¢‡∏à‡πâ‡∏≤‡∏á‡∏à‡∏±‡∏î‡πÉ‡∏´‡πâ", "‡∏≠‡∏∑‡πà‡∏ô‡πÜ"])
            if water_source_opt == "‡∏≠‡∏∑‡πà‡∏ô‡πÜ":
                water_source_other = st.text_input("‡∏≠‡∏∑‡πà‡∏ô‡πÜ (‡πÇ‡∏õ‡∏£‡∏î‡∏£‡∏∞‡∏ö‡∏∏):", key="water_src_other", label_visibility="collapsed")
                form_data['‡πÅ‡∏´‡∏•‡πà‡∏á‡∏ô‡πâ‡∏≥‡∏î‡∏∑‡πà‡∏°'] = water_source_other
            else:
                form_data['‡πÅ‡∏´‡∏•‡πà‡∏á‡∏ô‡πâ‡∏≥‡∏î‡∏∑‡πà‡∏°'] = water_source_opt

            disease_opts = st.multiselect("2.6 ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÇ‡∏£‡∏Ñ‡∏õ‡∏£‡∏∞‡∏à‡πç‡∏≤‡∏ï‡∏±‡∏ß:", ["‡πÑ‡∏°‡πà‡∏°‡∏µ", "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô‡πÇ‡∏•‡∏´‡∏¥‡∏ï‡∏™‡∏π‡∏á", "‡πÄ‡∏ö‡∏≤‡∏´‡∏ß‡∏≤‡∏ô", "‡πÇ‡∏•‡∏´‡∏¥‡∏ï‡∏à‡∏≤‡∏á", "‡∏≠‡∏∑‡πà‡∏ô‡πÜ"])
            if "‡∏≠‡∏∑‡πà‡∏ô‡πÜ" in disease_opts:
                disease_other = st.text_input("‡∏≠‡∏∑‡πà‡∏ô‡πÜ (‡πÇ‡∏õ‡∏£‡∏î‡∏£‡∏∞‡∏ö‡∏∏):", key="disease_other", label_visibility="collapsed")
                form_data['‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÇ‡∏£‡∏Ñ‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß'] = ", ".join(disease_opts) + f", ‡∏≠‡∏∑‡πà‡∏ô‡πÜ: {disease_other}"
            else:
                form_data['‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÇ‡∏£‡∏Ñ‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß'] = ", ".join(disease_opts)

    # --- Tab 3: Work Information ---
    with tab3:
        with st.container(border=True):
            st.subheader("‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 3: ‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏≠‡∏≤‡∏ä‡∏µ‡∏û")
            col1, col2 = st.columns([3, 1])
            job_current = col1.text_input("3.1 ‡∏≠‡∏≤‡∏ä‡∏µ‡∏û‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô:")
            job_current_years = col2.number_input("‡∏ó‡∏≥‡∏°‡∏≤‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏µ‡πà‡∏õ‡∏µ", min_value=0, step=1, key="job_current_years")
            form_data['‡∏≠‡∏≤‡∏ä‡∏µ‡∏û‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô'] = f"{job_current} ({job_current_years} ‡∏õ‡∏µ)"

            form_data['‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞‡∏á‡∏≤‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô'] = st.text_input("3.2 ‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞‡∏á‡∏≤‡∏ô/‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏á‡∏≤‡∏ô/‡πÅ‡∏ú‡∏ô‡∏Å‡∏ó‡∏µ‡πà‡∏ó‡πç‡∏≤‡∏á‡∏≤‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô:")

            st.write("3.3 ‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏ó‡πç‡∏≤‡∏á‡∏≤‡∏ô:")
            col1, col2 = st.columns(2)
            work_hours = col1.number_input("‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á/‡∏ß‡∏±‡∏ô", min_value=0, step=1, key="work_hours")
            work_days = col2.number_input("‡∏ß‡∏±‡∏ô/‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå", min_value=0, step=1, key="work_days")
            form_data['‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏≥‡∏á‡∏≤‡∏ô'] = f"{work_hours} ‡∏ä‡∏°./‡∏ß‡∏±‡∏ô, {work_days} ‡∏ß‡∏±‡∏ô/‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå"

            col1, col2 = st.columns([3, 1])
            job_previous = col1.text_input("3.4 ‡∏≠‡∏≤‡∏ä‡∏µ‡∏û‡πÄ‡∏î‡∏¥‡∏°‡∏Å‡πà‡∏≠‡∏ô‡∏°‡∏≤‡∏ó‡πç‡∏≤‡∏á‡∏≤‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô:")
            job_previous_years = col2.number_input("‡∏ó‡∏≥‡∏°‡∏≤‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏µ‡πà‡∏õ‡∏µ", min_value=0, step=1, key="job_prev_years")
            form_data['‡∏≠‡∏≤‡∏ä‡∏µ‡∏û‡πÄ‡∏î‡∏¥‡∏°'] = f"{job_previous} ({job_previous_years} ‡∏õ‡∏µ)"

    # --- Tab 4: Risk Factors and Protection ---
    with tab4:
        with st.container(border=True):
            st.subheader("‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 4: ‡∏õ‡∏±‡∏à‡∏à‡∏±‡∏¢‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏ï‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏™‡∏±‡∏°‡∏ú‡∏±‡∏™‡∏™‡∏≤‡∏£‡∏ï‡∏∞‡∏Å‡∏±‡πà‡∏ß")
            risk_jobs_list = [
                "‡∏á‡∏≤‡∏ô‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÅ‡∏ö‡∏ï‡πÄ‡∏ï‡∏≠‡∏£‡∏µ‡πà", "‡∏ñ‡∏•‡∏∏‡∏á/‡∏´‡∏•‡∏≠‡∏°‡∏ï‡∏∞‡∏Å‡∏±‡πà‡∏ß", "‡∏á‡∏≤‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏´‡∏£‡∏∑‡∏≠‡∏ö‡∏±‡∏î‡∏Å‡∏£‡∏µ", "‡∏´‡∏•‡∏≠‡∏°‡∏ï‡∏∞‡∏Å‡∏±‡πà‡∏ß/‡∏Å‡∏£‡∏∞‡∏™‡∏∏‡∏ô",
                "‡∏ó‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡∏û‡πà‡∏ô‡∏™‡∏µ", "‡∏ã‡πà‡∏≠‡∏°‡∏¢‡∏≤‡∏ô‡∏¢‡∏ô‡∏ï‡πå", "‡∏ã‡πà‡∏≠‡∏°‡πÅ‡∏´ ‡∏≠‡∏ß‡∏ô", "‡∏ã‡πà‡∏≠‡∏°‡πÄ‡∏£‡∏∑‡∏≠‡∏õ‡∏£‡∏∞‡∏°‡∏á", "‡∏ã‡πà‡∏≠‡∏°‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡πÑ‡∏ü‡∏ü‡πâ‡∏≤",
                "‡∏Ñ‡∏±‡∏î‡πÅ‡∏¢‡∏Å‡∏Ç‡∏¢‡∏∞‡∏≠‡∏¥‡πÄ‡∏•‡πá‡∏Å‡∏ó‡∏£‡∏≠‡∏ô‡∏¥‡∏Å‡∏™‡πå", "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÄ‡∏Ñ‡∏•‡∏∑‡∏≠‡∏ö/‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏õ‡∏±‡πâ‡∏ô‡∏î‡∏¥‡∏ô‡πÄ‡∏ú‡∏≤", "‡∏á‡∏≤‡∏ô‡πÇ‡∏£‡∏á‡∏û‡∏¥‡∏°‡∏û‡πå/‡∏´‡∏•‡πà‡∏≠‡∏ï‡∏±‡∏ß‡∏û‡∏¥‡∏°‡∏û‡πå",
                "‡∏á‡∏≤‡∏ô‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏™‡∏µ", "‡∏ó‡∏≥‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏î‡∏±‡∏ö"
            ]

            risk_jobs_household = st.multiselect("4.1 ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏ó‡πà‡∏≤‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏ô‡∏ö‡πâ‡∏≤‡∏ô‡∏°‡∏µ‡∏ú‡∏π‡πâ‡πÉ‡∏î‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏≠‡∏≤‡∏ä‡∏µ‡∏û‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏ô‡∏µ‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà:", risk_jobs_list)
            risk_jobs_household_other = st.text_input("‡∏≠‡∏≤‡∏ä‡∏µ‡∏û‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏≠‡∏∑‡πà‡∏ô‡πÜ (‡πÇ‡∏õ‡∏£‡∏î‡∏£‡∏∞‡∏ö‡∏∏):", key="risk_job_other")
            if risk_jobs_household_other:
                risk_jobs_household.append(risk_jobs_household_other)
            form_data['‡∏≠‡∏≤‡∏ä‡∏µ‡∏û‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡πÉ‡∏ô‡∏Ñ‡∏£‡∏±‡∏ß‡πÄ‡∏£‡∏∑‡∏≠‡∏ô'] = ", ".join(risk_jobs_household) if risk_jobs_household else "‡πÑ‡∏°‡πà‡∏°‡∏µ"

            risk_places_nearby = st.multiselect("4.2 ‡πÇ‡∏£‡∏á‡∏á‡∏≤‡∏ô/‡∏™‡∏ñ‡∏≤‡∏ô‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏Å‡∏≤‡∏£/‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏ï‡∏∞‡∏Å‡∏±‡πà‡∏ß (‡∏£‡∏∞‡∏¢‡∏∞‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 30 ‡πÄ‡∏°‡∏ï‡∏£‡∏à‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏≠‡∏≤‡∏®‡∏±‡∏¢):", risk_jobs_list, key="risk_places")
            risk_places_nearby_other = st.text_input("‡∏™‡∏ñ‡∏≤‡∏ô‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏≠‡∏∑‡πà‡∏ô‡πÜ (‡πÇ‡∏õ‡∏£‡∏î‡∏£‡∏∞‡∏ö‡∏∏):", key="risk_place_other")
            if risk_places_nearby_other:
                risk_places_nearby.append(risk_places_nearby_other)
            form_data['‡∏™‡∏ñ‡∏≤‡∏ô‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡πÉ‡∏Å‡∏•‡πâ‡∏ó‡∏µ‡πà‡∏û‡∏±‡∏Å'] = ", ".join(risk_places_nearby) if risk_places_nearby else "‡πÑ‡∏°‡πà‡∏°‡∏µ"

        with st.container(border=True):
            st.subheader("4.3 ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏Ñ‡∏∏‡πâ‡∏°‡∏Ñ‡∏£‡∏≠‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡∏™‡πà‡∏ß‡∏ô‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏• (PPE)")
            ppe_items = ["‡∏ñ‡∏∏‡∏á‡∏°‡∏∑‡∏≠‡∏¢‡∏≤‡∏á/‡∏´‡∏ô‡∏±‡∏á", "‡∏´‡∏°‡∏ß‡∏Å/‡∏ú‡πâ‡∏≤‡∏Ñ‡∏•‡∏∏‡∏°‡∏ú‡∏°", "‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡∏≤‡∏Å‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏ù‡∏∏‡πà‡∏ô/‡∏ú‡πâ‡∏≤‡∏õ‡∏¥‡∏î‡∏à‡∏°‡∏π‡∏Å", "‡πÅ‡∏ß‡πà‡∏ô‡∏ï‡∏≤", "‡∏£‡∏≠‡∏á‡πÄ‡∏ó‡πâ‡∏≤‡∏ö‡∏π‡∏ò/‡∏ú‡πâ‡∏≤‡πÉ‡∏ö", "‡πÄ‡∏™‡∏∑‡πâ‡∏≠‡πÅ‡∏Ç‡∏ô‡∏¢‡∏≤‡∏ß", "‡∏Å‡∏≤‡∏á‡πÄ‡∏Å‡∏á‡∏Ç‡∏≤‡∏¢‡∏≤‡∏ß"]
            ppe_options = ["‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ", "‡πÉ‡∏ä‡πâ‡∏ö‡∏≤‡∏á‡∏Ñ‡∏£‡∏±‡πâ‡∏á", "‡πÉ‡∏ä‡πâ‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á"]
            
            for i, item in enumerate(ppe_items):
                form_data[f'PPE: {item}'] = st.radio(f"{item}", ppe_options, horizontal=True, key=f"ppe_{i}")
            
            ppe_other_name = st.text_input("‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡∏£‡∏∞‡∏ö‡∏∏", key="ppe_other_name")
            if ppe_other_name:
                form_data[f'PPE: {ppe_other_name}'] = st.radio(" ", ppe_options, horizontal=True, key="ppe_other_opt", label_visibility="collapsed")

            st.markdown("---")
            
            ppe_source = st.multiselect("4.4 ‡πÅ‡∏´‡∏•‡πà‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏≤‡∏Ç‡∏≠‡∏á‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå:", ["‡∏ã‡∏∑‡πâ‡∏≠‡πÄ‡∏≠‡∏á", "‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏à‡∏≤‡∏Å‡πÇ‡∏£‡∏á‡∏á‡∏≤‡∏ô/‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó", "‡∏≠‡∏∑‡πà‡∏ô‡πÜ"])
            if "‡∏≠‡∏∑‡πà‡∏ô‡πÜ" in ppe_source:
                ppe_source_other = st.text_input("‡πÅ‡∏´‡∏•‡πà‡∏á‡∏≠‡∏∑‡πà‡∏ô‡πÜ (‡πÇ‡∏õ‡∏£‡∏î‡∏£‡∏∞‡∏ö‡∏∏):", key="ppe_src_other", label_visibility="collapsed")
                form_data['‡πÅ‡∏´‡∏•‡πà‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏≤‡∏Ç‡∏≠‡∏á‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏Ñ‡∏∏‡πâ‡∏°‡∏Ñ‡∏£‡∏≠‡∏á'] = ", ".join(ppe_source) + f", ‡∏≠‡∏∑‡πà‡∏ô‡πÜ: {ppe_source_other}"
            else:
                 form_data['‡πÅ‡∏´‡∏•‡πà‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏≤‡∏Ç‡∏≠‡∏á‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏Ñ‡∏∏‡πâ‡∏°‡∏Ñ‡∏£‡∏≠‡∏á'] = ", ".join(ppe_source)

            col1, col2 = st.columns(2)
            form_data['‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡πá‡∏ö‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå'] = col1.radio("4.5 ‡∏ó‡πà‡∏≤‡∏ô‡πÄ‡∏Å‡πá‡∏ö‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏Ø ‡πÑ‡∏ß‡πâ‡∏ó‡∏µ‡πà‡πÉ‡∏î:", ["‡∏ö‡πâ‡∏≤‡∏ô", "‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô"])
            form_data['‡∏ß‡∏¥‡∏ò‡∏µ‡πÄ‡∏Å‡πá‡∏ö‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå'] = col2.radio("4.6 ‡∏ó‡πà‡∏≤‡∏ô‡∏à‡∏±‡∏î‡πÄ‡∏Å‡πá‡∏ö‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏Ø ‡∏´‡∏•‡∏±‡∏á‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£:", ["‡∏ï‡∏≤‡∏°‡∏û‡∏∑‡πâ‡∏ô/‡∏ú‡∏ô‡∏±‡∏á‡∏´‡πâ‡∏≠‡∏á", "‡∏•‡πá‡∏≠‡∏Å‡πÄ‡∏Å‡∏≠‡∏£‡πå/‡∏ï‡∏π‡πâ‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞", "‡∏≠‡∏∑‡πà‡∏ô‡πÜ"])

        with st.container(border=True):
            st.subheader("4.7 ‡∏û‡∏§‡∏ï‡∏¥‡∏Å‡∏£‡∏£‡∏°‡∏î‡πâ‡∏≤‡∏ô‡∏™‡∏∏‡∏Ç‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢")
            hygiene_items = ["‡∏•‡πâ‡∏≤‡∏á‡∏°‡∏∑‡∏≠‡∏Å‡πà‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏ó‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£", "‡∏≠‡∏≤‡∏ö‡∏ô‡πâ‡∏≥‡∏Å‡πà‡∏≠‡∏ô‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô", "‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏™‡∏∑‡πâ‡∏≠‡∏ú‡πâ‡∏≤‡∏Å‡πà‡∏≠‡∏ô‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô", "‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏≠‡∏á‡πÄ‡∏ó‡πâ‡∏≤‡∏Å‡πà‡∏≠‡∏ô‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô", "‡∏ô‡∏≥‡πÄ‡∏™‡∏∑‡πâ‡∏≠‡∏ú‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏õ‡∏ô‡πÄ‡∏õ‡∏∑‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡∏ö‡πâ‡∏≤‡∏ô"]
            hygiene_options = ["‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥/‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà", "‡∏ö‡∏≤‡∏á‡∏Ñ‡∏£‡∏±‡πâ‡∏á", "‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á/‡∏õ‡∏£‡∏∞‡∏à‡πç‡∏≤"]
            
            for i, item in enumerate(hygiene_items):
                form_data[f'‡∏™‡∏∏‡∏Ç‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞: {item}'] = st.radio(f"{item}", hygiene_options, horizontal=True, key=f"hygiene_{i}")

    # --- Tab 5: Symptoms ---
    with tab5:
        with st.container(border=True):
            st.subheader("‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 5: ‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏ú‡∏•‡∏Å‡∏£‡∏∞‡∏ó‡∏ö‡∏ó‡∏≤‡∏á‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û (3 ‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏°‡∏≤)")
            
            symptoms = [
                "‡∏≠‡πà‡∏≠‡∏ô‡πÄ‡∏û‡∏•‡∏µ‡∏¢", "‡πÄ‡∏ö‡∏∑‡πà‡∏≠‡∏≠‡∏≤‡∏´‡∏≤‡∏£", "‡∏Ñ‡∏•‡∏∑‡πà‡∏ô‡πÑ‡∏™‡πâ ‡∏≠‡∏≤‡πÄ‡∏à‡∏µ‡∏¢‡∏ô", "‡∏ó‡πâ‡∏≠‡∏á‡∏ú‡∏π‡∏Å", "‡∏õ‡∏ß‡∏î‡∏ó‡πâ‡∏≠‡∏á‡∏£‡∏∏‡∏ô‡πÅ‡∏£‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏û‡∏±‡∏Å ‡πÜ",
                "‡∏õ‡∏ß‡∏î‡∏ï‡∏≤‡∏°‡∏Ç‡πâ‡∏≠ ‡∏Å‡∏•‡πâ‡∏≤‡∏°‡πÄ‡∏ô‡∏∑‡πâ‡∏≠", "‡∏õ‡∏ß‡∏î‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏¢‡∏ï‡∏≤‡∏°‡∏£‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏¢", "‡∏õ‡∏ß‡∏î‡∏®‡∏µ‡∏£‡∏©‡∏∞", "‡∏ã‡∏µ‡∏î", "‡∏ã‡∏∂‡∏°", "‡∏ä‡∏±‡∏Å",
                "‡∏Å‡∏£‡∏∞‡∏ß‡∏ô‡∏Å‡∏£‡∏∞‡∏ß‡∏≤‡∏¢/‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏°‡∏≤‡∏ò‡∏¥", "‡∏´‡∏á‡∏∏‡∏î‡∏´‡∏á‡∏¥‡∏î‡∏á‡πà‡∏≤‡∏¢", "‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏•‡∏î‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏", "‡∏°‡∏∑‡∏≠‡∏™‡∏±‡πà‡∏ô",
                "‡∏°‡∏∑‡∏≠ ‡πÄ‡∏ó‡πâ‡∏≤ ‡∏≠‡πà‡∏≠‡∏ô‡πÅ‡∏£‡∏á", "‡∏ú‡∏∑‡πà‡∏ô"
            ]
            symptom_options = ["‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏£‡∏∞‡∏à‡∏≥", "‡∏ô‡∏≤‡∏ô ‡πÜ ‡∏Ñ‡∏£‡∏±‡πâ‡∏á", "‡πÑ‡∏°‡πà‡∏°‡∏µ"]

            # Create a header for the symptom table
            header_cols = st.columns([2, 1, 1, 1])
            header_cols[0].markdown("**‡∏≠‡∏≤‡∏Å‡∏≤‡∏£**")
            header_cols[1].markdown(f"<p style='text-align: center;'><b>{symptom_options[0]}</b></p>", unsafe_allow_html=True)
            header_cols[2].markdown(f"<p style='text-align: center;'><b>{symptom_options[1]}</b></p>", unsafe_allow_html=True)
            header_cols[3].markdown(f"<p style='text-align: center;'><b>{symptom_options[2]}</b></p>", unsafe_allow_html=True)
            st.divider()

            # Create a row for each symptom
            for symptom in symptoms:
                row_cols = st.columns([2, 1, 1, 1])
                row_cols[0].write(symptom)
                
                # The radio button group spans the other three columns
                selected_option = row_cols[1].radio(f"freq_{symptom}", [" "], label_visibility="collapsed", key=f"symptom_{symptom}_opt1", horizontal=True)
                selected_option = row_cols[2].radio(f"freq_{symptom}", [" "], label_visibility="collapsed", key=f"symptom_{symptom}_opt2", horizontal=True)
                selected_option = row_cols[3].radio(f"freq_{symptom}", [" "], label_visibility="collapsed", key=f"symptom_{symptom}_opt3", horizontal=True)

                # A bit of a workaround to create a single radio group across columns
                # We use a hidden radio group to get the value
                value = st.radio(f"hidden_radio_{symptom}", symptom_options, horizontal=True, label_visibility="collapsed", key=f"symptom_{symptom}")
                form_data[f'‡∏≠‡∏≤‡∏Å‡∏≤‡∏£: {symptom}'] = value


    # --- Submitter Information and Submission Button ---
    st.markdown("---")
    with st.container(border=True):
        st.subheader("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å (‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà)")
        col1, col2 = st.columns(2)
        form_data['‡∏ú‡∏π‡πâ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•'] = col1.text_input("‡∏ú‡∏π‡πâ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡∏ä‡∏∑‡πà‡∏≠:")
        form_data['‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å'] = col2.text_input("‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠:")
    
    # Store form data in session state before the button is clicked
    st.session_state.form_data = form_data

    submitted = st.button("‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô", use_container_width=True, type="primary")

    if submitted:
        # When the button is clicked, use the data from session state to evaluate
        evaluate_and_display_results(st.session_state.form_data)


def evaluate_lead_risk(form_data):
    """
    Evaluates lead exposure risk based on form data and returns risk level and recommendations.
    This logic remains unchanged from the original file.
    """
    risk_score = 0
    recommendations_occ = []
    recommendations_patient = []

    # Risk Factor Scoring
    if form_data.get('‡∏≠‡∏≤‡∏ä‡∏µ‡∏û‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡πÉ‡∏ô‡∏Ñ‡∏£‡∏±‡∏ß‡πÄ‡∏£‡∏∑‡∏≠‡∏ô') and form_data.get('‡∏≠‡∏≤‡∏ä‡∏µ‡∏û‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡πÉ‡∏ô‡∏Ñ‡∏£‡∏±‡∏ß‡πÄ‡∏£‡∏∑‡∏≠‡∏ô') != "‡πÑ‡∏°‡πà‡∏°‡∏µ":
        risk_score += len(form_data['‡∏≠‡∏≤‡∏ä‡∏µ‡∏û‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡πÉ‡∏ô‡∏Ñ‡∏£‡∏±‡∏ß‡πÄ‡∏£‡∏∑‡∏≠‡∏ô'].split(',')) * 2
    if form_data.get('‡∏™‡∏ñ‡∏≤‡∏ô‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡πÉ‡∏Å‡∏•‡πâ‡∏ó‡∏µ‡πà‡∏û‡∏±‡∏Å') and form_data.get('‡∏™‡∏ñ‡∏≤‡∏ô‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡πÉ‡∏Å‡∏•‡πâ‡∏ó‡∏µ‡πà‡∏û‡∏±‡∏Å') != "‡πÑ‡∏°‡πà‡∏°‡∏µ":
        risk_score += len(form_data['‡∏™‡∏ñ‡∏≤‡∏ô‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡πÉ‡∏Å‡∏•‡πâ‡∏ó‡∏µ‡πà‡∏û‡∏±‡∏Å'].split(',')) * 2

    # PPE Scoring
    for key, value in form_data.items():
        if key.startswith('PPE:'):
            if value == "‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ":
                risk_score += 2
            elif value == "‡πÉ‡∏ä‡πâ‡∏ö‡∏≤‡∏á‡∏Ñ‡∏£‡∏±‡πâ‡∏á":
                risk_score += 1

    # Hygiene Scoring
    hygiene_scores = {
        "‡∏•‡πâ‡∏≤‡∏á‡∏°‡∏∑‡∏≠‡∏Å‡πà‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏ó‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£": {"‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥/‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà": 2, "‡∏ö‡∏≤‡∏á‡∏Ñ‡∏£‡∏±‡πâ‡∏á": 1, "‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á/‡∏õ‡∏£‡∏∞‡∏à‡πç‡∏≤": 0},
        "‡∏≠‡∏≤‡∏ö‡∏ô‡πâ‡∏≥‡∏Å‡πà‡∏≠‡∏ô‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô": {"‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥/‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà": 2, "‡∏ö‡∏≤‡∏á‡∏Ñ‡∏£‡∏±‡πâ‡∏á": 1, "‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á/‡∏õ‡∏£‡∏∞‡∏à‡πç‡∏≤": 0},
        "‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏™‡∏∑‡πâ‡∏≠‡∏ú‡πâ‡∏≤‡∏Å‡πà‡∏≠‡∏ô‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô": {"‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥/‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà": 2, "‡∏ö‡∏≤‡∏á‡∏Ñ‡∏£‡∏±‡πâ‡∏á": 1, "‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á/‡∏õ‡∏£‡∏∞‡∏à‡πç‡∏≤": 0},
        "‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏≠‡∏á‡πÄ‡∏ó‡πâ‡∏≤‡∏Å‡πà‡∏≠‡∏ô‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô": {"‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥/‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà": 2, "‡∏ö‡∏≤‡∏á‡∏Ñ‡∏£‡∏±‡πâ‡∏á": 1, "‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á/‡∏õ‡∏£‡∏∞‡∏à‡πç‡∏≤": 0},
        "‡∏ô‡∏≥‡πÄ‡∏™‡∏∑‡πâ‡∏≠‡∏ú‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏õ‡∏ô‡πÄ‡∏õ‡∏∑‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡∏ö‡πâ‡∏≤‡∏ô": {"‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥/‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà": 0, "‡∏ö‡∏≤‡∏á‡∏Ñ‡∏£‡∏±‡πâ‡∏á": 1, "‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á/‡∏õ‡∏£‡∏∞‡∏à‡πç‡∏≤": 2}
    }
    for item, scores in hygiene_scores.items():
        value = form_data.get(f'‡∏™‡∏∏‡∏Ç‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞: {item}')
        if value in scores:
            risk_score += scores[value]

    # Symptom Scoring
    for key, value in form_data.items():
        if key.startswith('‡∏≠‡∏≤‡∏Å‡∏≤‡∏£:'):
            if value == "‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏£‡∏∞‡∏à‡∏≥":
                risk_score += 2
            elif value == "‡∏ô‡∏≤‡∏ô ‡πÜ ‡∏Ñ‡∏£‡∏±‡πâ‡∏á":
                risk_score += 1

    # Determine Risk Level and Recommendations
    if risk_score >= 25:
        risk_level = "‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏™‡∏π‡∏á"
        recommendations_occ.extend([
            "‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏≠‡∏ö‡∏™‡∏ß‡∏ô‡πÇ‡∏£‡∏Ñ‡πÉ‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏Å‡∏≤‡∏£ ‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏‡∏´‡∏£‡∏∑‡∏≠‡∏õ‡∏±‡∏à‡∏à‡∏±‡∏¢‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏ó‡∏µ‡πà‡∏Å‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏Å‡∏¥‡∏î‡πÇ‡∏£‡∏Ñ",
            "‡∏û‡∏¥‡∏à‡∏≤‡∏£‡∏ì‡∏≤‡∏™‡πà‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ï‡∏∞‡∏Å‡∏±‡πà‡∏ß‡πÉ‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏î (Blood Lead Level) ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏±‡∏°‡∏ú‡∏±‡∏™",
            "‡πÄ‡∏™‡∏ô‡∏≠‡∏°‡∏≤‡∏ï‡∏£‡∏Å‡∏≤‡∏£‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡πÇ‡∏£‡∏Ñ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏£‡πà‡∏á‡∏î‡πà‡∏ß‡∏ô ‡πÅ‡∏•‡∏∞‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°"
        ])
        recommendations_patient.extend([
            "‡∏Ñ‡∏ß‡∏£‡∏´‡∏¢‡∏∏‡∏î‡∏û‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡πÉ‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤‡πÅ‡∏û‡∏ó‡∏¢‡πå‡∏ú‡∏π‡πâ‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç",
            "‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏ï‡∏≤‡∏°‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏∏‡∏Ç‡∏≠‡∏ô‡∏≤‡∏°‡∏±‡∏¢‡∏™‡πà‡∏ß‡∏ô‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏Ñ‡∏£‡πà‡∏á‡∏Ñ‡∏£‡∏±‡∏î‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î",
            "‡∏á‡∏î‡∏Å‡∏≤‡∏£‡∏ô‡∏≥‡πÄ‡∏™‡∏∑‡πâ‡∏≠‡∏ú‡πâ‡∏≤‡πÅ‡∏•‡∏∞‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡∏ö‡πâ‡∏≤‡∏ô‡πÇ‡∏î‡∏¢‡πÄ‡∏î‡πá‡∏î‡∏Ç‡∏≤‡∏î"
        ])
    elif 10 <= risk_score < 25:
        risk_level = "‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á"
        recommendations_occ.extend([
            "‡∏Ñ‡∏ß‡∏£‡∏û‡∏¥‡∏à‡∏≤‡∏£‡∏ì‡∏≤‡πÄ‡∏î‡∏¥‡∏ô‡∏™‡∏≥‡∏£‡∏ß‡∏à (Walk-through survey) ‡πÉ‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°",
            "‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏´‡πâ‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏ï‡∏≤‡∏°‡∏õ‡∏±‡∏à‡∏à‡∏±‡∏¢‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á (‡∏ï‡∏£‡∏ß‡∏à‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ï‡∏∞‡∏Å‡∏±‡πà‡∏ß‡πÉ‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏î) ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏á‡∏≤‡∏ô",
            "‡∏ó‡∏ö‡∏ó‡∏ß‡∏ô‡πÅ‡∏•‡∏∞‡πÉ‡∏´‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡πÅ‡∏•‡∏∞‡∏™‡∏∏‡∏Ç‡∏≠‡∏ô‡∏≤‡∏°‡∏±‡∏¢"
        ])
        recommendations_patient.extend([
            "‡∏ï‡πâ‡∏≠‡∏á‡∏™‡∏ß‡∏°‡πÉ‡∏™‡πà‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏• (PPE) ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡∏ï‡∏•‡∏≠‡∏î‡πÄ‡∏ß‡∏•‡∏≤‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô",
            "‡∏•‡πâ‡∏≤‡∏á‡∏°‡∏∑‡∏≠‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏Å‡πà‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏ó‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£ ‡∏î‡∏∑‡πà‡∏°‡∏ô‡πâ‡∏≥ ‡πÅ‡∏•‡∏∞‡∏™‡∏π‡∏ö‡∏ö‡∏∏‡∏´‡∏£‡∏µ‡πà",
            "‡∏≠‡∏≤‡∏ö‡∏ô‡πâ‡∏≥‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏™‡∏∑‡πâ‡∏≠‡∏ú‡πâ‡∏≤‡∏Å‡πà‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡∏ö‡πâ‡∏≤‡∏ô‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á"
        ])
    else:
        risk_level = "‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏ï‡πà‡∏≥"
        recommendations_occ.extend([
            "‡πÄ‡∏ù‡πâ‡∏≤‡∏£‡∏∞‡∏ß‡∏±‡∏á‡πÅ‡∏•‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á",
            "‡∏à‡∏±‡∏î‡πÉ‡∏´‡πâ‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏≠‡∏ö‡∏£‡∏°‡πÉ‡∏´‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡∏î‡πâ‡∏≤‡∏ô‡∏≠‡∏≤‡∏ä‡∏µ‡∏ß‡∏≠‡∏ô‡∏≤‡∏°‡∏±‡∏¢‡πÅ‡∏•‡∏∞‡∏Ñ
